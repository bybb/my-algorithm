# 실수형
print("==============================================")
print("실수형(Real Number)")
# 양의 실수
a = 157.93
print(a)

# 음의 실수
a = -1837.2
print(a)

# 소수부가 0일 때 0을 생략
a = 5.
print(a)

# 정수부가 0일때 0을 생략
a = -.7
print(a)

# 1,000,000,000의 지수 표현 방식
a = 1e9
print(a)

# 752.5
a = 75.25e1
print(a)

# 3.954
a = 3954e-3
print(a)

# 정수 타입 변경
a = int(1e9)
print(a)

# IEEE754표준에서 실수형을 저장하기 위해 4바이트, 혹은 8바이트의 고정된 크기의 메모리를 항당하므로, 컴퓨터 시스템은 실수 정보를 표현하는 정확도에 한계를 가진다.
#예) 10진수 체계에서는 0.3과 0.6을 더한 값이 정확하게 0.9
#예) 2진수에서는 0.9를 정확히 표현할 수 없고 최대한 가깝게 표현하지만 미세한 오차가 있다.
a = 0.3 + 0.6
print(a)

if a == 0.9:
  print(True)
else:
  print(False)

# 개발 과정에서 실수 값을 제대로 비교하지 못해서 원하는 결과를 얻지 못할 수 있음.
# round()함수 권장
a = 0.3 + 0.6
print(round(a, 4))

if round(a, 4) == 0.9:
  print(True)
else:
  print(False)

# 나누기 연산자(/)는 실수형 반환
# 나머지 연산자(%)를 이용해야 할 때 많음
# 몫을 얻으려면 몫 연산자(//) 사용
# 거듭 제곱 연산자(**) 이외에도 많음

a = 7
b = 3

# 나누기
print(a / b)

# 나머지
print(a % b)

# 몫
print(a // b)

a = 5
b = 3

# 거듭 제곱
print(a ** b)

# 제곱근(루트)
print(a ** 0.5)

print("==============================================")